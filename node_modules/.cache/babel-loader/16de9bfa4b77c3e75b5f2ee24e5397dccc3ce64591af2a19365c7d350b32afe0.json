{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\SDE\\\\WEB_DEV\\\\FRONTED\\\\React\\\\top-course-starter\\\\src\\\\Components\\\\Cards.jsx\",\n  _s = $RefreshSig$();\n// import Card from \"./Card\";\n// import React, { useState } from 'react'\n\n// const Cards = (props) => {\n\n//     console.log(props.category);\n//     console.log(props.courses);\n\n//     let category = props.category;\n//     const [likedCourses, setLikedCourses] = useState([]);\n//     //   let allCourse = [];\n\n//     // It Returns list of all courses received from the api Response\n\n//     // const getCourses = () => {\n//     //     Object.values(props.courses).forEach((courseCategory) => {\n//     //         courseCategory.forEach((course) => {\n//     //             allCourse.push(course);\n//     //         });\n//     //     });\n//     //     return allCourse;\n//     // };\n\n//     function getCourses(category) {\n//         if (category === \"All\") {\n//             let allCourses = [];\n//             Object.values(props.courses).forEach((array) => {\n//                 array.forEach((courseData) => {\n//                     allCourses.push(courseData);\n//                 });\n//             });\n//             return allCourses;\n//         }\n//         else\n//         {\n//             return props.courses[category];\n//         }\n//     }\n\n//     //   console.log(allCourse);\n//     const coursesForRendering = getCourses(category);\n\n//     return (\n\n//         <div className=\"flex flex-wrap justify-center gap-4 mb-4\">\n//           {\n//                 coursesForRendering.map((course) => (\n//                     <Card\n//                         key={course.id}\n//                         course={course}\n//                         likedCourses={likedCourses}\n//                         setLikedCourses={setLikedCourses}\n//                     />\n//                 ))\n//             }\n//         </div>\n//     );\n// };\n\n// export default Cards;\n\n//-------------------------------------------------------------------------------------------------------------------------- \nimport Card from \"./Card\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = props => {\n  _s();\n  // Destructuring props to extract category and courses\n  const {\n    category,\n    courses\n  } = props;\n\n  // Logging category and courses for debugging\n  console.log(\"Category:\", category);\n  console.log(\"Courses:\", courses);\n\n  // Using useState hook for likedCourses\n  const [likedCourses, setLikedCourses] = useState([]);\n\n  // Function to get courses based on category\n  function getCourses(category) {\n    if (category === \"All\") {\n      // If category is \"All\", flatten all courses\n      let allCourses = [];\n      Object.values(courses).forEach(array => {\n        array.forEach(courseData => {\n          allCourses.push(courseData);\n        });\n      });\n      return allCourses;\n    } else {\n      // If category is specific, return courses for that category\n      return courses[category] || []; // Ensure it returns an empty array if category not found\n    }\n  }\n\n  // Getting courses for rendering based on category\n  const coursesForRendering = getCourses(category);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap justify-center gap-4 mb-4\",\n    children: coursesForRendering.map(course => /*#__PURE__*/_jsxDEV(Card, {\n      course: course,\n      likedCourses: likedCourses,\n      setLikedCourses: setLikedCourses\n    }, course.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_s(Cards, \"KP37kmpS0XhdZPz1Rd7V6iwaxXc=\");\n_c = Cards;\nexport default Cards;\n// ---------------------------------------------------------------------------------------------------------------------------------------\n\n// import React, { useState } from 'react';\n// import Card from \"./Card\";\n\n// const Cards = (props) => {\n//     console.log(\"Category:\", props.category);\n//     console.log(\"Courses:\", props.courses);\n\n//     const { category, courses } = props;\n//     const [likedCourses, setLikedCourses] = useState([]);\n\n//     function getCourses(category) {\n//         console.log(\"Getting courses for category:\", category);\n//         if (category === \"All\") {\n//             let allCourses = [];\n//             Object.values(courses).forEach((array) => {\n//                 array.forEach((courseData) => {\n//                     allCourses.push(courseData);\n//                 });\n//             });\n//             return allCourses;\n//         } else {\n//             return courses[category] || []; // Ensure it returns an empty array if category not found\n//         }\n//     }\n\n//     const coursesForRendering = getCourses(category);\n//     console.log(\"Courses for rendering:\", coursesForRendering);\n\n//     return (\n//         <div className=\"flex flex-wrap justify-center gap-4 mb-4\">\n// {\n//     coursesForRendering.map((course) => (\n//         <Card\n//             key={course.id}\n//             course={course}\n//             likedCourses={likedCourses}\n//             setLikedCourses={setLikedCourses}\n//         />\n//     ))\n// }\n//         </div>\n//     );\n// };\n\n// export default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["Card","React","useState","jsxDEV","_jsxDEV","Cards","props","_s","category","courses","console","log","likedCourses","setLikedCourses","getCourses","allCourses","Object","values","forEach","array","courseData","push","coursesForRendering","className","children","map","course","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/SDE/WEB_DEV/FRONTED/React/top-course-starter/src/Components/Cards.jsx"],"sourcesContent":["// import Card from \"./Card\";\n// import React, { useState } from 'react'\n\n// const Cards = (props) => {\n\n    \n    \n    \n//     console.log(props.category);\n//     console.log(props.courses);\n\n//     let category = props.category;\n//     const [likedCourses, setLikedCourses] = useState([]);\n//     //   let allCourse = [];\n    \n//     // It Returns list of all courses received from the api Response\n\n//     // const getCourses = () => {\n//     //     Object.values(props.courses).forEach((courseCategory) => {\n//     //         courseCategory.forEach((course) => {\n//     //             allCourse.push(course);\n//     //         });\n//     //     });\n//     //     return allCourse;\n//     // };\n    \n//     function getCourses(category) {\n//         if (category === \"All\") {\n//             let allCourses = [];\n//             Object.values(props.courses).forEach((array) => {\n//                 array.forEach((courseData) => {\n//                     allCourses.push(courseData);\n//                 });\n//             });\n//             return allCourses;\n//         }\n//         else\n//         {\n//             return props.courses[category];\n//         }\n//     }\n\n//     //   console.log(allCourse);\n//     const coursesForRendering = getCourses(category);\n   \n//     return (\n       \n//         <div className=\"flex flex-wrap justify-center gap-4 mb-4\">\n//           {\n//                 coursesForRendering.map((course) => (\n//                     <Card\n//                         key={course.id}\n//                         course={course}\n//                         likedCourses={likedCourses}\n//                         setLikedCourses={setLikedCourses}\n//                     />\n//                 ))\n//             }\n//         </div>\n//     );\n// };\n\n// export default Cards;\n\n//-------------------------------------------------------------------------------------------------------------------------- \nimport Card from \"./Card\";\nimport React, { useState } from 'react';\n\nconst Cards = (props) => {\n    // Destructuring props to extract category and courses\n    const { category, courses } = props;\n    \n    // Logging category and courses for debugging\n    console.log(\"Category:\", category);\n    console.log(\"Courses:\", courses);\n\n    // Using useState hook for likedCourses\n    const [likedCourses, setLikedCourses] = useState([]);\n\n    // Function to get courses based on category\n    function getCourses(category) {\n        if (category === \"All\") {\n            // If category is \"All\", flatten all courses\n            let allCourses = [];\n            Object.values(courses).forEach((array) => {\n                array.forEach((courseData) => {\n                    allCourses.push(courseData);\n                });\n            });\n            return allCourses;\n        } else {\n            // If category is specific, return courses for that category\n            return courses[category] || []; // Ensure it returns an empty array if category not found\n        }\n    }\n\n    // Getting courses for rendering based on category\n    const coursesForRendering = getCourses(category);\n\n    return (\n        <div className=\"flex flex-wrap justify-center gap-4 mb-4\">\n            {/* Rendering each course as a Card component */}\n            {coursesForRendering.map((course) => (\n                <Card\n                    key={course.id}\n                    course={course}\n                    likedCourses={likedCourses}\n                    setLikedCourses={setLikedCourses}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default Cards;\n// ---------------------------------------------------------------------------------------------------------------------------------------\n\n\n\n// import React, { useState } from 'react';\n// import Card from \"./Card\";\n\n// const Cards = (props) => {\n//     console.log(\"Category:\", props.category);\n//     console.log(\"Courses:\", props.courses);\n\n//     const { category, courses } = props;\n//     const [likedCourses, setLikedCourses] = useState([]);\n\n//     function getCourses(category) {\n//         console.log(\"Getting courses for category:\", category);\n//         if (category === \"All\") {\n//             let allCourses = [];\n//             Object.values(courses).forEach((array) => {\n//                 array.forEach((courseData) => {\n//                     allCourses.push(courseData);\n//                 });\n//             });\n//             return allCourses;\n//         } else {\n//             return courses[category] || []; // Ensure it returns an empty array if category not found\n//         }\n//     }\n\n//     const coursesForRendering = getCourses(category);\n//     console.log(\"Courses for rendering:\", coursesForRendering);\n\n//     return (\n//         <div className=\"flex flex-wrap justify-center gap-4 mb-4\">\n            // {\n            //     coursesForRendering.map((course) => (\n            //         <Card\n            //             key={course.id}\n            //             course={course}\n            //             likedCourses={likedCourses}\n            //             setLikedCourses={setLikedCourses}\n            //         />\n            //     ))\n            // }\n//         </div>\n//     );\n// };\n\n// export default Cards;\n\n"],"mappings":";;AAAA;AACA;;AAEA;;AAKA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrB;EACA,MAAM;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GAAGH,KAAK;;EAEnC;EACAI,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,QAAQ,CAAC;EAClCE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,OAAO,CAAC;;EAEhC;EACA,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,SAASY,UAAUA,CAACN,QAAQ,EAAE;IAC1B,IAAIA,QAAQ,KAAK,KAAK,EAAE;MACpB;MACA,IAAIO,UAAU,GAAG,EAAE;MACnBC,MAAM,CAACC,MAAM,CAACR,OAAO,CAAC,CAACS,OAAO,CAAEC,KAAK,IAAK;QACtCA,KAAK,CAACD,OAAO,CAAEE,UAAU,IAAK;UAC1BL,UAAU,CAACM,IAAI,CAACD,UAAU,CAAC;QAC/B,CAAC,CAAC;MACN,CAAC,CAAC;MACF,OAAOL,UAAU;IACrB,CAAC,MAAM;MACH;MACA,OAAON,OAAO,CAACD,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;IACpC;EACJ;;EAEA;EACA,MAAMc,mBAAmB,GAAGR,UAAU,CAACN,QAAQ,CAAC;EAEhD,oBACIJ,OAAA;IAAKmB,SAAS,EAAC,0CAA0C;IAAAC,QAAA,EAEpDF,mBAAmB,CAACG,GAAG,CAAEC,MAAM,iBAC5BtB,OAAA,CAACJ,IAAI;MAED0B,MAAM,EAAEA,MAAO;MACfd,YAAY,EAAEA,YAAa;MAC3BC,eAAe,EAAEA;IAAgB,GAH5Ba,MAAM,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAKrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEd,CAAC;AAACxB,EAAA,CA5CIF,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AA8CX,eAAeA,KAAK;AACpB;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACY;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACZ;AACA;AACA;;AAEA;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}